---
import { VariantProps, cva } from "class-variance-authority";
import type { HTMLAttributes } from "astro/types";

interface ButtonProps extends HTMLAttributes<"button"> {}

// const { ...attrs, class } = Astro.props as ButtonProps;
const { class: className, ...attrs } = Astro.props as ButtonProps;

const buttonVariants = cva(
  "inline-flex items-center justify-center rounded-sm text-sm ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 font-semibold",
  {
    variants: {
      variant: {
        default: "bg-primary text-primary-foreground hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground hover:bg-destructive/90",
        outline:
          "border border-input bg-background hover:bg-accent hover:text-accent-foreground",
        success: "bg-green-450 text-primary hover:bg-green-500",
        secondary:
          "bg-secondary text-secondary-foreground hover:bg-secondary/80",
        // ghost: "hover:bg-accent hover:text-accent-foreground",
      },
      size: {
        default: "h-9 px-4 py-1",
        sm: "h-9 rounded-md px-3",
        lg: "h-11 rounded-md px-8",
        icon: "h-10 w-10",
      },
    },
    defaultVariants: {
      variant: "success",
      size: "default",
    },
  }
);
---

<button {...attrs} class={buttonVariants()}> <slot /></button>
